ERROR: Ignored the following versions that require a different python version: 8.0.0 Requires-Python >=3.10; 8.0.0rc1 Requires-Python >=3.10; 8.0.1 Requires-Python >=3.10; 8.0.2 Requires-Python >=3.10; 8.1.0 Requires-Python >=3.10; 8.1.1 Requires-Python >=3.10; 8.1.2 Requires-Python >=3.10; 8.1.3 Requires-Python >=3.10
ERROR: Could not find a version that satisfies the requirement waymo-open-dataset-tf-2-1-0 (from versions: none)
ERROR: No matching distribution found for waymo-open-dataset-tf-2-1-0


+ PARTITION=1
+ JOB_NAME=1
+ CONFIG=configs/fastbev/exp/paper/fastbev_m0_r18_s256x704_v200x200x4_c192_d2_f4.py
+ GPUS=1
+ GPUS_PER_NODE=1
+ CPUS_PER_TASK=5
+ QUOTATYPE=auto
/workspace/Fast-BEV/tools/slurm_eval.sh: 12: Bad substitution
#!/usr/bin/env bash

set -x

PARTITION=$1
JOB_NAME=$2
CONFIG=$3
GPUS=${GPUS:-1}
GPUS_PER_NODE=${GPUS_PER_NODE:-8}
CPUS_PER_TASK=${CPUS_PER_TASK:-5}
QUOTATYPE=${QUOTATYPE:-"auto"}
PY_ARGS=${@:4}
SRUN_ARGS=${SRUN_ARGS:-""}

++ dirname ./slurm_eval.sh
+ PYTHONPATH=./..:
+ srun -p 1 --job-name=fastbev_m0_r18_s256x704_v200x200x4_c192_d2_f4 --quotatype=auto --gres=gpu:1 --ntasks=1 --ntasks-per-node=1 --cpus-per-task=5 --kill-on-bad-exit=1 -s python -u tools/eval.py configs/fastbev/exp/paper/fastbev_m0_r18_s256x704_v200x200x4_c192_d2_f4.py --launcher=slurm --out work_dirs/fastbev/exp/paper/fastbev_m0_r18_s256x704_v200x200x4_c192_d2_f4/results/results.pkl --eval bbox
./slurm_eval.sh: line 15: srun: command not found





# Base image with specified CUDA and OS versions
ARG CUDA_VERSION=11.8.0
ARG OS_VERSION=20.04

FROM nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-ubuntu${OS_VERSION}
LABEL maintainer="NVIDIA CORPORATION"

ENV TRT_VERSION 8.5.3.1
SHELL ["/bin/bash", "-c"]

# Set timezone and prevent user prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Kolkata

# Set up working directory
WORKDIR /workspace

# Essential dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg libsm6 libxext6 \
    software-properties-common \
    python3.9 \
    python3.9-venv \
    python3.9-dev \
    python3-pip \
    gcc \
    cmake \
    make \
    ninja-build \
    openjdk-11-jdk \
    git \
    wget \
    curl \
    mmdet==2.14.0 \
    mmsegmentation==0.14.1 \
    mmcv-full==1.4.0 -f \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install CMake >= 3.20.0
RUN wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-Linux-x86_64.sh && \
    chmod +x cmake-3.20.0-Linux-x86_64.sh && \
    ./cmake-3.20.0-Linux-x86_64.sh --skip-license --prefix=/usr/local

# Set up Python environment
RUN python3.9 -m venv /opt/venv
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64

# Upgrade pip and install Python requirements
RUN pip install --upgrade pip

# Install PyTorch and related dependencies
RUN pip3 install torch torchvision --index-url https://download.pytorch.org/whl/cu118 



# Install any additional requirements
COPY requirement.txt /tmp/requirement.txt
RUN pip3 install -r /tmp/requirement.txt

# Final clean-up
RUN apt-get update && apt-get upgrade -y && apt-get install -y git
