# Copyright 2023-2024 Synopsys, Inc.
# This Synopsys software and all associated documentation are proprietary
# to Synopsys, Inc. and may only be used pursuant to the terms and conditions
# of a written license agreement with Synopsys, Inc.
# All other use, reproduction, modification, or distribution of the Synopsys
# software or the associated documentation is strictly prohibited.

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import networkx as nx

from .single_layer_transforms import remove_one_layer

from nnac.core.log import Logger

logger = Logger("OPTIMIZATION")

""" Remove softmax node before argmax node
"""


def RemoveSoftmaxBeforeArgMax(opt):
    G = opt.G
    shapeDict = opt.ShapeDict

    layers = list(nx.topological_sort(G))
    for layer in layers:
        if layer in G.nodes:
            op_type = G.nodes[layer].get("op_type", None)
            if op_type == "Softmax":
                succ_layer = list(G.successors(layer))
                if len(succ_layer) != 1:
                    continue
                if G.nodes[succ_layer[0]].get("op_type", None) != "ArgMax":
                    continue
                argmax_layer = succ_layer[0]

                softmax_axis = G.nodes[layer]["attr_dict"].get("axis", None)
                argmax_axis = G.nodes[argmax_layer]["attr_dict"].get("axis", None)
                if softmax_axis is None or argmax_axis is None:
                    continue

                shape = shapeDict.get(layer, [])
                if shape == []:
                    continue
                if softmax_axis < 0:
                    softmax_axis += len(shape)
                if argmax_axis < 0:
                    argmax_axis += len(shape)

                if softmax_axis == argmax_axis:
                    remove_one_layer(opt, layer)
                    logger.debug(
                        "Remove Softmax {} before Argmax {}.".format(
                            layer, argmax_layer
                        )
                    )

                    opt.passes_counter["RemoveSoftmaxBeforeArgMax"] += 1
